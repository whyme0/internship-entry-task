// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToe.Api.Domain.Data;

#nullable disable

namespace TicTacToe.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("TicTacToe.Api.Domain.Models.GameBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Board")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameBoards");
                });

            modelBuilder.Entity("TicTacToe.Api.Domain.Models.GameRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Probability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(10);

                    b.Property<int>("WinCondition")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameRules");
                });

            modelBuilder.Entity("TicTacToe.Api.Domain.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("CurrMove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue('x');

                    b.Property<int>("GameBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameRulesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("INTEGER");

                    b.Property<char?>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameBoardId")
                        .IsUnique();

                    b.HasIndex("GameRulesId")
                        .IsUnique();

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("TicTacToe.Api.Domain.Models.GameSession", b =>
                {
                    b.HasOne("TicTacToe.Api.Domain.Models.GameBoard", "GameBoard")
                        .WithOne()
                        .HasForeignKey("TicTacToe.Api.Domain.Models.GameSession", "GameBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicTacToe.Api.Domain.Models.GameRules", "GameRules")
                        .WithOne()
                        .HasForeignKey("TicTacToe.Api.Domain.Models.GameSession", "GameRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameBoard");

                    b.Navigation("GameRules");
                });
#pragma warning restore 612, 618
        }
    }
}
